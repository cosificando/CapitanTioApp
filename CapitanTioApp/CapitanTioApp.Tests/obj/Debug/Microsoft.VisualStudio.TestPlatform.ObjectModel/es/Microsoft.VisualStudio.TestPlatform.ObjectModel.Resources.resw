<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TestResultPropertyErrorColumnNumberLabel" xml:space="preserve">
    <value>Número de columna de error</value>
  </data>
  <data name="TestOutcomeFailed" xml:space="preserve">
    <value>No superada</value>
  </data>
  <data name="TestOutcomeSkipped" xml:space="preserve">
    <value>Se omitió</value>
  </data>
  <data name="TestFailureStackTraceFormat" xml:space="preserve">
    <value>  Seguimiento de la pila:
{0}</value>
  </data>
  <data name="TestResultTextMessagesFormat" xml:space="preserve">
    <value>  Mensajes de pruebas:
{0}</value>
  </data>
  <data name="NotificationTimeoutIsZero" xml:space="preserve">
    <value>El tiempo de espera de notificación debe ser mayor que cero.</value>
  </data>
  <data name="InvalidSettingsXmlElement" xml:space="preserve">
    <value>Valor no válido '{0}'. XmlElement no esperado: '{1}'.</value>
  </data>
  <data name="Exception_RegisteredTestPropertyHasDifferentValueType" xml:space="preserve">
    <value>No se puede registrar la propiedad '{0}' como tipo de valor '{1}' porque ya se registró como '{2}'.</value>
  </data>
  <data name="InvalidSettingsXmlAttribute" xml:space="preserve">
    <value>Valor no válido '{0}'. XmlAttribute no esperado: '{1}'.</value>
  </data>
  <data name="TestResultPropertyComputerNameLabel" xml:space="preserve">
    <value>Nombre del equipo</value>
  </data>
  <data name="TestCasePropertyNameLabel" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="TestCasePropertyExecutorUriLabel" xml:space="preserve">
    <value>Uri del programa de ejecución</value>
  </data>
  <data name="TestOutcomeNotFound" xml:space="preserve">
    <value>No encontrada</value>
  </data>
  <data name="ConverterNotSupported" xml:space="preserve">
    <value>No se encuentra TypeConverter para el tipo {0}.</value>
  </data>
  <data name="TestResultPropertyDisplayNameLabel" xml:space="preserve">
    <value>Nombre para mostrar de los resultados de pruebas</value>
  </data>
  <data name="NullString" xml:space="preserve">
    <value>(null)</value>
  </data>
  <data name="MissingDataCollectorAttributes" xml:space="preserve">
    <value>La configuración del recolector de datos no es válida. Falta el atributo esperado '{0}'.  Una configuración de colector de datos típica debería ser similar a &lt;DataCollector uri="dataCollector://Samples/SampleCollector/1.0" assemblyQualifiedName="Samples.SampleCollector.SampleDataCollector, SampleCollectors, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1111111111111111" friendlyName="sampleCollector"&gt;.</value>
  </data>
  <data name="TestResultPropertyErrorMessageLabel" xml:space="preserve">
    <value>Mensaje de error</value>
  </data>
  <data name="TestCasePropertyFilePathLabel" xml:space="preserve">
    <value>Ruta de acceso del archivo</value>
  </data>
  <data name="TestFailureMessageFormat" xml:space="preserve">
    <value>  Mensaje: {0}</value>
  </data>
  <data name="TestResultPropertyOutcomeLabel" xml:space="preserve">
    <value>Resultado</value>
  </data>
  <data name="TestResultMessageFormat" xml:space="preserve">
    <value>  {0}:
{1}</value>
  </data>
  <data name="TestCasePropertyFullyQualifiedNameLabel" xml:space="preserve">
    <value>FullyQualifiedName</value>
  </data>
  <data name="NoTestCaseFilterForSpecificTests" xml:space="preserve">
    <value>No se puede especificar TestCaseFilter para series de pruebas específicas. FilterCriteria es solo para la ejecución con orígenes.</value>
  </data>
  <data name="TestResultPropertyErrorStackTraceLabel" xml:space="preserve">
    <value>Seguimiento de pila de errores</value>
  </data>
  <data name="BasicTestResultFormat" xml:space="preserve">
    <value>{0,-10}  {1}</value>
  </data>
  <data name="TestResultPropertyStartTimeLabel" xml:space="preserve">
    <value>Hora de inicio</value>
  </data>
  <data name="TestResultPropertyDurationLabel" xml:space="preserve">
    <value>Duración</value>
  </data>
  <data name="TestCasePropertyIdLabel" xml:space="preserve">
    <value>Id.</value>
  </data>
  <data name="TestCasePropertySourceLabel" xml:space="preserve">
    <value>Origen</value>
  </data>
  <data name="NotificationFrequencyIsNotPositive" xml:space="preserve">
    <value>La frecuencia de notificación debe ser un valor positivo.</value>
  </data>
  <data name="CouldNotFindXmlNode" xml:space="preserve">
    <value>No se encuentra el nodo '{0}'</value>
  </data>
  <data name="TestCasePropertyLineNumberLabel" xml:space="preserve">
    <value>Número de línea</value>
  </data>
  <data name="TestCasePropertyColumnNumberLabel" xml:space="preserve">
    <value>Número de columna</value>
  </data>
  <data name="UnexpectedTypeOfProperty" xml:space="preserve">
    <value>El tipo de propiedad de prueba '{0}' de la propiedad '{1}' no se admite. Use alguno de los tipos de propiedad admitidos (tipos primitivos, uri, cadena, cadena[]) e inténtelo de nuevo. </value>
  </data>
  <data name="TestOutcomePassed" xml:space="preserve">
    <value>Superada</value>
  </data>
  <data name="InvalidRunSettingsRootNode" xml:space="preserve">
    <value>El nodo raíz de los parámetros de ejecución se debe denominar 'RunSettings'.</value>
  </data>
  <data name="TestResultPropertyEndTimeLabel" xml:space="preserve">
    <value>Hora de finalización</value>
  </data>
  <data name="TestOutcomeNone" xml:space="preserve">
    <value>Ninguno</value>
  </data>
  <data name="InvalidSettingsIncorrectValue" xml:space="preserve">
    <value>Configuración '{0}' no válida. Se especificó el valor no válido '{1}' para '{2}'.</value>
  </data>
</root>